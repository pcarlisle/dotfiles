function tree() {
    #echo -e "\033[1;37m"

    (cd ${1-.} ; pwd)
    find ${1-.} -print 2>/dev/null | sort | sed \
        -e "s,^${1-.},,"                   \
        -e "/^$/d"                         \
        -e "s,[^/]*/\([^/]*\)$,\  |-- \1,"  \
        -e "s,[^/]*/,  |   ,g"

    #echo -e "\033[0m"
}


function color_example() {
    echo ""
    echo "#  Yellow on Blue"
    echo "# (note that order of bg/fg is not important)"
    echo "#               "
    echo "#                CD2"
    echo "#         ESC  CD | FG BG  m      END-CD"
    echo "#            \  | | |  |  /          |"
    echo "# echo -e '\033[1;5;33;44mHello\033[0m'"
}

function ren() {
    if [ $# -lt 3 ]; then
        echo -e "\033[1;32mUSAGE: \033[33mren OLD-str NEW-str file(s)\033[0m"
        echo -e "\033[1;32mExample: \033[33mren _ -nice- *jpg\033[0m"
    fi

    OLD=$1 ; NEW=$2 ; shift ; shift

    for i in $*
      do
      new=`echo ${i} | sed s/${OLD}/${NEW}/g`
      mv ${i} $new
    done
}

function pygraph() {
    if [ ! -n "$1" ]; then
        echo -e "USAGE: pygraph <file> [<files>] "
        return 1
    fi
    for f in "$@"; do
        gprof2dot -f pstats -o "${f}.dot" "${f}" && dot -o "${f}.svg" -Tsvg "${f}.dot"
        echo "Created: ${1}.dot ${1}.svg"
    done
}

function pygrep() {
    find ${2-.} -name '\.hg' -prune -o -name '*\.py' -print0 | xargs -0 grep ${3--n} "${1}"
}

alias edaily='gvim -o ~/text/daily/$(date +%Y-%m-%d).txt ~/text/daily/ongoing.txt'

alias ptags='ctags --languages=python --python-kinds=-i -R .'
alias rtags='ctags --languages=ruby -R .'
#alias ctags='/usr/local/bin/ctags --python-kinds=-i -R .'

# Cool git aliases

#XXX Need something about the line numbers!
alias ehead='git diff --name-only HEAD~ | xargs gvim'
alias egc=ehead
alias ebranch='git diff --name-only master | xargs gvim'
alias ebr=ebranch


# Puppet testing commands
testdir="$HOME/work/test"
certname="thinky.corp.puppetlabs.net"

function agent() {
    puppet "$@" --confdir=$testdir/conf/agent --vardir=$testdir/var/agent --server=localhost
}

function master() {
    puppet "$@" --confdir=$testdir/conf/master --vardir=$testdir/var/master
}

alias runmaster="puppet master --autosign=true --no-daemonize --debug --verbose --confdir=$testdir/conf/master --vardir=$testdir/var/master --certname $certname"

alias runagent="puppet agent --no-daemonize --debug --trace --verbose --confdir=$testdir/conf/agent --vardir=$testdir/var/agent --server $certname --onetime"

alias runcert="puppet cert --debug --verbose --confdir=$testdir/conf/master --vardir=$testdir/var/master --certname $certname"

alias runfilebucket="puppet filebucket --debug --trace --verbose --confdir=$testdir/conf/agent --vardir=$testdir/var/agent --server $certname"

alias runinspect="puppet inspect --debug --trace --verbose --confdir=$testdir/conf/agent --vardir=$testdir/var/agent --server $certname --report"

alias with_profile='CPUPROFILE_REALTIME=1 CPUPROFILE=/tmp/profile RUBYOPT="=r`gem which perftools | tail -1`"'

function mergepull() {
    if [ ! -n "$1" ]; then
        echo -e "Usage: mergepull user:refspec"
        return 1
    fi
    
    user=$(echo "$1" | cut -d: -f1)
    refspec=$(echo "$1" | cut -d: -f2) 

    git fetch https://github.com/${user}/puppet.git ${refspec}
    git merge --no-ff --log FETCH_HEAD
}

#time ./systest.rb -c ubuntu.conf --debug --type git -p 'git://worky/Users/patrick/work/puppet#origin/2.7.x' -f 1.6.0 -t acceptance-tests/tests/
function pcurl() {
    curl --cacert `master master --configprint localcacert` --cert `agent agent --configprint hostcert` --key `agent agent --configprint hostprivkey` "https://localhost:8140/$1" $2 $3 $4
}

alias be='bundle exec'

function called() {
    if [ ! -n "$1" ]; then
        echo -e "Usage: called <function>"
        return 1
    fi

    ack "(^\s*|\.)\K$1\b" lib
}

function nexus_releases() {
    for p in "$@"; do
        p_version=$(curl -s -H 'Accept: application/xml' "http://nexus.delivery.puppetlabs.net/service/local/artifact/maven/resolve?r=public&g=puppetlabs&a=${p}&v=RELEASE" | xml sel -t -m '//version' -v .)
        echo "${p}-version=${p_version}"
    done
}

function delete_vm() {
    curl -X DELETE http://vcloud.delivery.puppetlabs.net/vm/${1}
}

alias delvm delete_vm
